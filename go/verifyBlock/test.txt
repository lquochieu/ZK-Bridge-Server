package main

import (
	"crypto/ed25519"
	//"crypto/sha256"
	"fmt"
	"encoding/hex"
)

func First[T, U any](val T, _ U) T {
	return val
}


func main() {


	digest := []byte{110, 8, 2, 17, 197, 198, 157, 0, 0, 0, 0, 0, 34, 72, 10, 32, 221, 176, 16, 254, 205, 166, 67, 239, 182, 231, 240, 251, 203, 176, 164, 171, 127, 35, 23, 63, 134, 91, 64, 237, 244, 113, 57, 163, 98, 126, 18, 0, 18, 36, 8, 1, 18, 32, 28, 66, 108, 220, 131, 113, 179, 106, 254, 145, 161, 129, 136, 18, 8, 121, 3, 179, 92, 111, 198, 239, 153, 141, 25, 255, 45, 207, 110, 250, 0, 165, 42, 12, 8, 228, 139, 196, 159, 6, 16, 179, 137, 182, 245, 1, 50, 9, 79, 114, 97, 105, 99, 104, 97, 105, 110}

	sig :=  []byte{29, 199, 36, 178, 84, 166, 115, 76, 30, 71, 15, 32, 51, 147, 51, 1, 30, 66, 149, 118, 179, 245, 1, 108, 92, 133, 123, 255, 26, 191, 209, 137, 204, 46, 245, 69, 46, 84, 169, 94, 155, 240, 248, 97, 172, 191, 212, 248, 191, 204, 117, 38, 12, 181, 189, 199, 208, 109, 101, 68, 129, 167, 97, 4}
	publ := ed25519.PublicKey(First(hex.DecodeString("FD284E309E23A18641A8F545B43D3EB24539F65061F38B80C8B92678BE83A70A")))
	
	fmt.Println(digest[:])
	fmt.Println(sig[:32])
	fmt.Println(sig[32:])
	fmt.Println(publ)
	rtn := ed25519.Verify(publ, digest[:], sig)

	// fmt.Println(sha256.New().Sum(First(hex.DecodeString("FD284E309E23A18641A8F545B43D3EB24539F65061F38B80C8B92678BE83A70A"))))
	if rtn {
		fmt.Printf("Signature verifies")
	} else {
		fmt.Printf("Signature does not verify")
	}
}