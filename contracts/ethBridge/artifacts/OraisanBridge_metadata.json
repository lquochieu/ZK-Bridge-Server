{
	"compiler": {
		"version": "0.8.18+commit.87f61d96"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256[]",
						"name": "inputs",
						"type": "uint256[]"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					}
				],
				"name": "ClaimTransactionCompleted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "version",
						"type": "uint8"
					}
				],
				"name": "Initialized",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "Paused",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "Unpaused",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256[]",
						"name": "inputs",
						"type": "uint256[]"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					}
				],
				"name": "UpdateDepositRootCompleted",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "ROOT_HISTORY_SIZE",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "optionName",
								"type": "string"
							},
							{
								"internalType": "uint256[2]",
								"name": "pi_a",
								"type": "uint256[2]"
							},
							{
								"internalType": "uint256[2][2]",
								"name": "pi_b",
								"type": "uint256[2][2]"
							},
							{
								"internalType": "uint256[2]",
								"name": "pi_c",
								"type": "uint256[2]"
							},
							{
								"internalType": "address",
								"name": "eth_bridge_address",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "eth_receiver",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							},
							{
								"internalType": "uint160",
								"name": "cosmos_token_address",
								"type": "uint160"
							},
							{
								"internalType": "uint256",
								"name": "depositRoot",
								"type": "uint256"
							}
						],
						"internalType": "struct IVerifier.ClaimTransactionProof",
						"name": "_claimTransactionProof",
						"type": "tuple"
					}
				],
				"name": "claimTransaction",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint160",
						"name": "",
						"type": "uint160"
					}
				],
				"name": "cosmosToEthTokenAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "currentDepositRoot",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint160",
						"name": "_cosmosTokenAddress",
						"type": "uint160"
					}
				],
				"name": "deleteTokenPair",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "depositRoots",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "ethToCosmosTokenAddress",
				"outputs": [
					{
						"internalType": "uint160",
						"name": "",
						"type": "uint160"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getLastDepositRoot",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint160",
						"name": "_cosmosBridge",
						"type": "uint160"
					}
				],
				"name": "getSupportCosmosBridge",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint160",
						"name": "_cosmosToken",
						"type": "uint160"
					}
				],
				"name": "getTokenPairOfCosmosToken",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_ethToken",
						"type": "address"
					}
				],
				"name": "getTokenPairOfEthToken",
				"outputs": [
					{
						"internalType": "uint160",
						"name": "",
						"type": "uint160"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_libAddressManager",
						"type": "address"
					},
					{
						"internalType": "uint32",
						"name": "_merkleTreeHeight",
						"type": "uint32"
					}
				],
				"name": "initialize",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "isClaimed",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_depositRoot",
						"type": "uint256"
					}
				],
				"name": "isKnownDepostRoot",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint160",
						"name": "",
						"type": "uint160"
					}
				],
				"name": "isSupportCosmosBridge",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "levels",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "libAddressManager",
				"outputs": [
					{
						"internalType": "contract Lib_AddressManager",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pause",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "paused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint160",
						"name": "_cosmosBridge",
						"type": "uint160"
					},
					{
						"internalType": "bool",
						"name": "_isSupport",
						"type": "bool"
					}
				],
				"name": "registerCosmosBridge",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint160",
						"name": "_cosmosTokenAddress",
						"type": "uint160"
					},
					{
						"internalType": "address",
						"name": "_ethTokenAddress",
						"type": "address"
					}
				],
				"name": "registerTokenPair",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					}
				],
				"name": "resolve",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "unpauseContract",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "optionName",
								"type": "string"
							},
							{
								"internalType": "uint256[2]",
								"name": "pi_a",
								"type": "uint256[2]"
							},
							{
								"internalType": "uint256[2][2]",
								"name": "pi_b",
								"type": "uint256[2][2]"
							},
							{
								"internalType": "uint256[2]",
								"name": "pi_c",
								"type": "uint256[2]"
							},
							{
								"internalType": "uint160",
								"name": "cosmosSender",
								"type": "uint160"
							},
							{
								"internalType": "uint160",
								"name": "cosmosBridge",
								"type": "uint160"
							},
							{
								"internalType": "uint256",
								"name": "depositRoot",
								"type": "uint256"
							},
							{
								"internalType": "uint160",
								"name": "dataHash",
								"type": "uint160"
							}
						],
						"internalType": "struct IVerifier.DepositRootProof",
						"name": "_depositRootProof",
						"type": "tuple"
					}
				],
				"name": "updateRootDepositTree",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"events": {
				"Initialized(uint8)": {
					"details": "Triggered when the contract has been initialized or reinitialized."
				},
				"Paused(address)": {
					"details": "Emitted when the pause is triggered by `account`."
				},
				"Unpaused(address)": {
					"details": "Emitted when the pause is lifted by `account`."
				}
			},
			"kind": "dev",
			"methods": {
				"getLastDepositRoot()": {
					"details": "Returns the last root claim"
				},
				"isKnownDepostRoot(uint256)": {
					"details": "Whether the root is present in the root history"
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"paused()": {
					"details": "Returns true if the contract is paused, and false otherwise."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"resolve(string)": {
					"details": "get address of contract by its Name"
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"pause()": {
					"notice": "Pause relaying."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/ethBridge/OraisanBridge.sol": "OraisanBridge"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
			"keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
			"license": "MIT",
			"urls": [
				"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
				"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
			]
		},
		"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
			"keccak256": "0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271",
			"license": "MIT",
			"urls": [
				"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618",
				"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ"
			]
		},
		"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
			"keccak256": "0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250",
			"license": "MIT",
			"urls": [
				"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad",
				"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR"
			]
		},
		"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
			"keccak256": "0x2b3005a0064cfc558bdf64b2bae94b565f4574a536aadd61c13838d4f2157790",
			"license": "MIT",
			"urls": [
				"bzz-raw://622c3eb87563e71585c9f538d1a196fe2d154dcc5b8f335e8770a8acc95e1f3a",
				"dweb:/ipfs/QmSnDqJJLzv3mirjGB1vrk5X7hegFdS7BKpscpxyqj7sWu"
			]
		},
		"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
			"keccak256": "0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183",
			"license": "MIT",
			"urls": [
				"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06",
				"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879"
			]
		},
		"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
			"keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
			"license": "MIT",
			"urls": [
				"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
				"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
			]
		},
		"contracts/ethBridge/MerkleTreeWithHistory.sol": {
			"keccak256": "0xa0407bd81e5831fc561669c6daa67824655f6eade96e1319268bf41189d54f72",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://2905570098c48c09b09043c662c2e488b2ddc9a3adec5e7b1c42ae9a28c97743",
				"dweb:/ipfs/QmUsHmPKzVWg8CCVJVFFfF5SucNwXU2z7VuvRNYn2mrqoe"
			]
		},
		"contracts/ethBridge/OraisanBridge.sol": {
			"keccak256": "0x3e34862326492c4851b3bcb4d0dbfc3ebf9987991c3abe78a1091ff8afc42872",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://8cd111a7a92342fe76b98031ccfa4e0479ef1979b4d924ed155779f484c9789e",
				"dweb:/ipfs/QmUkA1gR7r4iNZL9Zme8zuvrGVNKcwYdGbzGtcUdKo1BEJ"
			]
		},
		"contracts/interface/ICosmosBlockHeader.sol": {
			"keccak256": "0x9d289a0f4ac43c83cf88cbce0e71d45fe2468085491b2305b62eaa34deb60e3b",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://4ac5159358faa02fa6e94d1f445a3b3d455ded97eaa843f29b1443efd69ce50b",
				"dweb:/ipfs/QmXJmcE71h2PYbwtqftKKtANuRNngreAufzEQnzhczvAG3"
			]
		},
		"contracts/interface/IERC20Token.sol": {
			"keccak256": "0xbe3737216cfaf12a2fc7c144654dc33773afee96e77fc3ebacda20c420b6801f",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://2d4b711432299655ec64c501bb1e3e03ce498a56dd1caacc78735563210023b6",
				"dweb:/ipfs/Qmc56MY4twcya3ZVsi7ygVjrNZwX36MyXMYEjMe4ndJP6y"
			]
		},
		"contracts/interface/IVerifier.sol": {
			"keccak256": "0xd6b684e2b8bda2f967a172fe3d5dd5b27ca042637390b2b66de9ef2ce0b5269c",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://59c2c890ff3d330cc697fbb866fd84a46ad8b5d8384b6ee83b07fd9e1e69219d",
				"dweb:/ipfs/QmVddpkuXkz2DLKYG1SwuUpXhxp7rncyHyY2xCnLCaCzm7"
			]
		},
		"contracts/libs/Lib_AddressManager.sol": {
			"keccak256": "0x5252730150973802863ed614915919e4137d06aaf6e8ea5fcaaed6e20611ec3f",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://af2fb5aa08232afbab324792e2f3cf978470a8b69429fbf213bb0608b2f6a0a0",
				"dweb:/ipfs/QmTtRojmp2gCkts2KvV6TtG7gw45VTxXa2KfhCh1tN1Ava"
			]
		},
		"contracts/libs/Lib_AddressResolver.sol": {
			"keccak256": "0x235510987f86b02f7bb29449b2882b9cfc65267ca8470dc06abadc9fb164a5ac",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://eb3b0b13d7fcb55eb37e5a81a725164d20c52e8d292e5c9fdcbe5a3fce89b027",
				"dweb:/ipfs/Qmc89tsfTsKVvg1sLXLwkHyhtYuMXGsxXckShV85RjQdDX"
			]
		}
	},
	"version": 1
}